class Solution {
public:
    void solve(vector<vector<int>> & ans, vector<int> output, int idx=0)
    {
        //base case
        if(idx==output.size())
        {
            ans.push_back(output);
            return;
        }

        for(int i=idx;i<output.size();i++)
        {
            // if(i>idx+1 && output[i]==output[i-1])
            //     continue;

              if(i!=idx && (output[i] == output[idx])) 
                continue;

            // if(i==idx || (output[i]!=output[idx]))
            // {
            //     swap(output[i],output[idx]);
            //     solve(ans,output,idx+1);
            //     swap(output[i],output[idx]);
            // }

            swap(output[i],output[idx]);
            solve(ans,output,idx+1);
            // swap(output[i],output[idx]);

        }
    }
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>> ans;
        solve(ans,nums);
        return ans;
    }
};
